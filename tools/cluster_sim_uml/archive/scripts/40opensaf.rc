#!/bin/ash
#
#      -*- OpenSAF  -*-
#
# (C) Copyright 2007 The OpenSAF Foundation
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. This file and program are licensed
# under the GNU Lesser General Public License Version 2.1, February 1999.
# The complete license can be accessed from the following location:
# http://opensource.org/licenses/lgpl-license.php
# See the Copying file included with the OpenSAF distribution for full
# licensing terms.
#
# Author(s): Ericsson AB
#

# This script is executed last in the UML start sequence
# and contains preparations of the UML environment for OpenSAF
# and finally the start of OpenSAF

REPL_DIR=repl-opensaf
OSAF_HOSTNAME=$(hostname)
eval "$(echo "$OSAF_HOSTNAME" | sed 's/\(.*\)-\(.*\)/hosttype=\1 hostnumber=\2/')"
immxml_sc_count=$(grep -c 'SC SC-' /hostfs/rootfs/usr/local/share/opensaf/immxml/nodes.cfg)

if test "$(uname -m)" = "x86_64"; then
   export LD_LIBRARY_PATH="/lib64:/usr/lib64:/usr/local/lib64:/usr/local/lib64/opensaf"
   test -r /usr/local/lib64 || ln -s lib /usr/local/lib64
else
   export LD_LIBRARY_PATH="/lib:/usr/lib:/usr/local/lib:/usr/local/lib/opensaf"
fi

mkdir -p /var/lib/opensaf
mkdir -p /var/run/opensaf
chown opensaf:opensaf /var/lib/opensaf
chown opensaf:opensaf /var/run/opensaf

rm /etc/opensaf/node_type

# Simulate a replicated partition (DRBD)
rm -f /var/lib/opensaf/immsv_store
ln -s /hostfs/$REPL_DIR/immsv_store /var/lib/opensaf/

rm -f /var/lib/opensaf/log
ln -s /hostfs/$REPL_DIR/log /var/lib/opensaf/log

ln -s /hostfs/repl-opensaf /repl_opensaf

mkdir -p /repl_opensaf/saflog

if [ "$hostnumber" -le "$immxml_sc_count" ]; then
    ln -sf /etc/opensaf/nodeinit.conf.controller /etc/opensaf/nodeinit.conf
    echo controller > /etc/opensaf/node_type
else
    ln -sf /etc/opensaf/nodeinit.conf.payload /etc/opensaf/nodeinit.conf
    echo payload > /etc/opensaf/node_type
fi

rm -f /etc/opensaf/slot_id
rm -f /etc/opensaf/subslot_id
rm -f /etc/opensaf/node_id
echo "$hostnumber" > /etc/opensaf/slot_id
echo 15 > /etc/opensaf/subslot_id
node_name=$(hostname)
node_ip=$(grep "$node_name.opensaf.org  $node_name" /etc/hosts | cut -d" " -f 1)
sed -i "s/DTM_NODE_IP=.*/DTM_NODE_IP=$node_ip/" /etc/opensaf/dtmd.conf

# Generate node unique node_name & node_id files
rm -f /etc/opensaf/node_name /etc/opensaf/node_id
echo "$node_name" > /etc/opensaf/node_name

# Enable core dumps for opensaf and AMF started programs
# Somehow the UML kernel cannot write to hostfs
echo "/tmp/core_%t_%e_%p" > /proc/sys/kernel/core_pattern
ulimit -c unlimited

if test -e /etc/plmcd.conf; then
    sc_1_ip=$(grep "SC-1" /etc/hosts | cut -d' ' -f 1)
    sc_2_ip=$(grep "SC-2" /etc/hosts | cut -d' ' -f 1)
    if [ "$node_name" == "SC-1" ]; then
      ee="Linux_os_hosting_clm_node,safHE=f120_slot_1"
      path="my_entity = \"{ADVANCEDTCA_CHASSIS,2}{PHYSICAL_SLOT,1}{SWITCH_BLADE,0}\""
    elif [ "$node_name" == "SC-2" ]; then
      ee="Linux_os_hosting_clm_node,safHE=f120_slot_16"
      path="my_entity = \"{ADVANCEDTCA_CHASSIS,2}{PHYSICAL_SLOT,16}{SWITCH_BLADE,0}\""
    else
      ee="$node_name"
    fi
    sed -i -e "s/10.105.1.3/$sc_1_ip/" \
        -e "s/10.105.1.6/$sc_2_ip/" \
        -e "s/0020f/safEE=$ee,safDomain=domain_1/" \
        -e "s/1;os;Fedora;2.6.31/1;os;SUSE;2.6/" \
        -e "/^\/etc\/init.d/s/^/#/" \
        /etc/plmcd.conf
    cp /etc/openhpi/openhpi.conf /var/opt
    chmod go-rwx /var/opt/openhpi.conf
    echo "$path" > /etc/openhpi/openhpiclient.conf

    /usr/sbin/openhpid -c /var/opt/openhpi.conf

    # wait for hpi to read in hardware info
    echo "waiting for HPI to come up" && date
    for i in `seq 1 180`; do
        hpiinv &> /dev/null
        if [ $? == 0 ]; then
            break
        else
            sleep 1
        fi
    done
    echo "HPI is up" && date

    /usr/local/sbin/plmcd&
fi

/etc/init.d/opensafd start&
